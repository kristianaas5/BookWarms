@page "/users/{id:int}"
@using BookWarms.web.Services
@inject UsersApiClient Api
@inject NavigationManager Nav

<h1>User</h1>

@if (!string.IsNullOrWhiteSpace(error))
{
    <div class="alert alert-danger">@error</div>
}
else if (loading)
{
    <p>Loading...</p>
}
else if (user is null)
{
    <p>User not found.</p>
}
else
{
    <div class="card">
        <div class="card-body">
            <div class="fs-4">@user.Username</div>
            <div class="text-muted">@user.Email</div>
        </div>
    </div>

    <div class="mt-3">
        <button class="btn btn-secondary" @onclick="@(()=>Nav.NavigateTo("/users"))">Back to Users</button>
    </div>
}

@code {
    [Parameter] public int id { get; set; }

    private string? error;
    private bool loading = true;
    private UserDto? user;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await Api.GetUserAsync(id);
        }
        catch (Exception ex)
        {
            error = $"Failed to load user: {ex.Message}";
        }
        finally
        {
            loading = false;
        }
    }
}